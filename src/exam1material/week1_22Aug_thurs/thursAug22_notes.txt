HW 0 due tonight

HW 1 due Tuesday, August 27


#7: "You know the thief was either Agatha, Ferdinand, or Carl."
    --> how to interpret?
    there is exactly one thief


Collaboration policy


AI policy



////////////////////////////////////////////////////////

- where to find examples from class

- how to clone lecture notes repo

- weekly review quizzes

- what to do before/after each class

/////////////////////////////////////////////////////////

Today:

- More with logical reasoning and puzzles
- Begin logic gates and truth tables
- Evaluating logical statements


/////////////////////////////////////////////////////////

All ints.

if (x < 3 || y > 4) {
    statements1;
}
else if (x < 5 && y == 7) {
    statements2;
}
else {
    statements3;
}

--> is it possible for "statements2" to execute?

no - the if would have to be false, so
    x >= 3 and y <= 4. Furthermore, the else if would
    have to be true, so x < 5 and y == 7. It is not possible
    for y to be both <= 4 and == 7.


--> what if "y==7" becomes "y > 2"?
    What do we know if statements2 executes?

    x >= 3 and y <=4 (because if condition was false)
    x > 5 and y > 2 (because else if condition was true)

    x must be either 3 or 4 and y must be either 3 or 4

////////////////////////////////////////////////////////

Another knights and knaves example.


You meet three inhabitants: Sarah, Bill and Mae.

Sarah tells you that only a knave would say that Bill is a knave.
Bill claims that it's false that Mae is a knave.
Mae tells you, “Bill would tell you that I am a knave.”

What types are Sarah, Bill, and Mae?


(How might we simplify everything?)

Sarah: Bill is a knight
Bill: Mae is a knight
Mae: Bill would tell you that I am a knave


Suppose Sarah is a knight. Then Bill must be a knight. Then
    Mae must also be a knight. Mae's statement doesn't work
    because Bill would say she is a knight.

Suppose instead Sarah is a knave. Then Bill must be a knave and
    Mae must be a knave. Mae's statement works because Bill
    would lie and say Mae is a knight (and Mae knows this),
    but Mae lies and says Bill would say the opposite -- that
    she is a knave.

////////////////////////////////////

Lion always lies on Mondays, Tuesdays, and Wednesdays.
Lion always tells the truth on other days.
Unicorn always lies on Thursdays, Fridays, and Saturdays,
    and always tells the truth on other days.

On Sunday, everyone tells the truth.

Lion says: "Yesterday was one of my lying days."
Unicorn says: "Yesterday was one of my lying days, too."

What day is it?

Sunday? Lion would not say he lied yesterday. NO
Tuesday? NO. Lion DID lie yesterday, but would lie about it.
    In a similar way, we eliminate Wed/Fri/Sat. In each case,
    the creature who is lying to today also lied yesterday,
    and should be lying about it.

Thursday: Yes! Lion (correctly) tells the truth that yesterday
    (Wed) was one of his lying days. Unicorn lies (correctly)
    and says yesterday was one of his lying days (which it wasn't).




////////////////////////////////

Tweedledee and Tweedledum are identical.
You know that one of them lies Mon/Tues/Wed,
and that the other lies Thurs/Fri/Sat.
(They tell the truth on non-lying days.)

(So they both tell the truth on Sunday.)

You don't know which is which.

You see both of them together.
The first one says: "I'm Tweedledum."
The second one says: "I'm Tweedledee."

Which is which? What day is it?


must be Sunday - they would give same name on any other day
(one liar, one truth teller)

they are who they say




//////////////////////////////////
Another Tweedledee and Tweedledum (same rules).

First twin: Today is Monday or Wednesday
Second twin: Today is Monday or Sunday

What day of the week is it?

(what kind of OR?) inclusive


can only be Mon, Wed, Sun (we know at least one is telling the truth)

can't be Sun - first twin would be lying

can't be Mon - both would be telling truth, and one should be lying


That leaves Wednesday.



//////////////////////////////////

You know that either Tweedledum or Tweedledee has
    lost a rattle.
You find it, and want to return it to the correct one.
You don't know what day it is, but are sure that it isn’t
    Sunday.


(we know one is lying, one is telling truth)

The first one says: "Tweedledee owns the rattle."
The second one says: "I'm Tweedledee!"

Who gets the rattle?

Only two cases -- first truth, second lie or vice versa.

Suppose the first twin is telling the truth. Then Tweedledee really
does own the rattle. In this case, the second twin must be lying.
Then second twin must be Tweedledum and the first twin must be
Tweedledee.

Suppose instead the first twin is lying. Then Tweedledum must
own the rattle. The second twin must be telling the truth and
must be Tweedledee. Then the first twin is Tweedledum.

In both cases, the first twin owns the rattle. We give it
to the first twin.

We DON'T know who is who.

///////////////////////////////////////////

Based on Shakespeare's "Merchant of Venice".

There are three caskets – one gold, one silver,
    and one lead.
Exactly one of the caskets contains a portrait.
Each casket has a message on it, and you know that at most
    one of the messages is true.

Gold casket: "The portrait is in this casket."
Silver casket: "The portrait is not in this casket."
Lead casket: "The portrait is not in the gold casket."

Where is the portrait?

Suppose in gold. Gold: T, Silver: T. NO. More than one message
    is true.

Suppose in silver. Gold: F, Silver: F. Don't need to check more
    would still have at most one truth.

Suppose in lead. Gold: F, Silver: T, Lead: T. NO. More than one
    message is true.


Answer: silver




///////////////////////////////////

Cheryl's birthday problem.

Written for Singapore and Asian Schools Math Olympiad in 2015

Albert and Bernard want to know when Cheryl's birthday is.
Cheryl gives them 10 potential dates:

May 15, May 16, May 19
June 17, June 18
July 14, July 16
August 14, August 15, August 17

Cheryl privately tells Albert her birthday month.
    (May, June, July, or August)

Cheryl privately tells Bernard her birthday day (number).
    (14-19)


Albert says: "I don't know when Cheryl's birthday is,
    but I know Bernard doesn't know too."

Bernard says: "At first I didn't know when Cheryl's
    birthday is, but now I do."

    (Bernard also knows it is not May or June)

Albert says: "Then I also know when Cheryl's birthday is."



When is Cheryl's birthday? . July 16
    (we worked this on the board)

From first statement: can't be May/June as both have a unique day
From second statement: can't be 14 as there is one in July and Aug
From third statement: can't be August as there are still two
    possible days remaining there

///////////////////////////////////

Start truth tables and logic gates.

    have boolean variables
    want to express statements like: p AND (q OR r)

Variables can be true or false

Basic operations:

∧   and
∨   or (inclusive or)
¬   not
→   implies


Basic logic gates (draw on board)

gates still used to design circuits

why do we care about equivalent circuits?

what about programming?

///////////////////////////////////////////////////

Fill in basic operations:


AND:

p q  #  p ∧ q
--------------
T T  #    T
T F  #    F
F T  #    F
F F  #    F


OR:

p q  #  p ∨ q
--------------
T T  #    T
T F  #    T
F T  #    T
F F  #    F


NOT:

p  # ¬p
--------
T  # F
F  # T

////////////////////////////////////////////////

IMPLIES operator →

"If I have a test, then I will study"

p: I have a test
q: I will study

p → q

It is false if we have BROKEN A PROMISE.
Otherwise we have not.

p q  #  p → q
--------------
T T  #    T
T F  #    F
F T  #    T
F F  #    T

/////////////////////////////////////////

(stopped here, will continue on Tuesday)

/////////////////////////////////////////

How does the implies operator relate to programming?

//////////////////////////////////////////

Design circuits for:

¬(p ∨ q)       (p NOR q)

¬(p ∧ (q ∨ r))

p XOR q (with just the gates we've seen, not a specific XOR gate)

/////////////////////////////////////

How would we evaluate the output of these circuits with
different inputs?




Graphically build circuits:

https://logic.ly/demo/


//////////////////////////////////////

Evaluating logical statements.

Basic operations:

∧ - AND
∨ - OR (inclusive or)
¬ - NOT
→ - IMPLIES

////////////////////////////////////////

Consider ¬p ∨ q ∧ r.

--> what operation do we do first?



Order of operations

In math?




For logic statements:

From highest (happens first) to lowest (happens last) precedence:


Given this statement:

    ¬p ∨ q ∧ r

Add () to show the order of operations.

¬p ∨ q ∧ r


Evaluate the above statement using these
variable assignments:

p is T
q is F
r is F




////////////////////////////////////////////////

Order of operations
    ¬ evaluates right to left
        ¬¬p is equivalent to....

    ∧ and ∨ evaluate left to right
        p ∧ q ∧ r is equivalent to....
        p ∨ q ∨ r is equivalent to....

    → evaluates right to left
        p → q → r is equivalent to....





//////////////////////////////////////////

Top-level operator (what happens LAST?)


¬p ∧ q ∨ r


top-level:


How is this similar to a circuit?



///////////////////////////////

p ∧ q ∨ r ∧ p

rewrite with ():

top-level operator?



//////////////////////////////

p ∧ q ∧ r ∧ s

rewrite with ():


top-level operator?

////////////////////////////////////////////////////

Classifying logical statements.

Contingent, contradictory, tautology


Definitions/examples

contingent - the overall statements is true for
    some truth assignments and false for others

    Example?


contradictory - for all possible truth assignments,
    the overall statement is false

    Example?


tautology - for all possible truth assignments,
    the overall statement is true

    Example?


∧ ∨ ¬ →

///////////////////////////////////////////

Next:
more with truth tables
parse trees
begin propositional logic
